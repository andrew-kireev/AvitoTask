// Code generated by MockGen. DO NOT EDIT.
// Source: usecase.go

// Package mock_statistic is a generated GoMock package.
package mock_statistic

import (
	models "AvitoTask/internal/app/statistic/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUsecase is a mock of Usecase interface.
type MockUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockUsecaseMockRecorder
}

// MockUsecaseMockRecorder is the mock recorder for MockUsecase.
type MockUsecaseMockRecorder struct {
	mock *MockUsecase
}

// NewMockUsecase creates a new mock instance.
func NewMockUsecase(ctrl *gomock.Controller) *MockUsecase {
	mock := &MockUsecase{ctrl: ctrl}
	mock.recorder = &MockUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUsecase) EXPECT() *MockUsecaseMockRecorder {
	return m.recorder
}

// DeleteAll mocks base method.
func (m *MockUsecase) DeleteAll() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteAll")
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteAll indicates an expected call of DeleteAll.
func (mr *MockUsecaseMockRecorder) DeleteAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteAll", reflect.TypeOf((*MockUsecase)(nil).DeleteAll))
}

// GetStatistic mocks base method.
func (m *MockUsecase) GetStatistic(arg0, arg1, arg2 string) ([]models.Statistic, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStatistic", arg0, arg1, arg2)
	ret0, _ := ret[0].([]models.Statistic)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStatistic indicates an expected call of GetStatistic.
func (mr *MockUsecaseMockRecorder) GetStatistic(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStatistic", reflect.TypeOf((*MockUsecase)(nil).GetStatistic), arg0, arg1, arg2)
}

// SaveStatistic mocks base method.
func (m *MockUsecase) SaveStatistic(arg0 *models.Statistic) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveStatistic", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveStatistic indicates an expected call of SaveStatistic.
func (mr *MockUsecaseMockRecorder) SaveStatistic(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveStatistic", reflect.TypeOf((*MockUsecase)(nil).SaveStatistic), arg0)
}
